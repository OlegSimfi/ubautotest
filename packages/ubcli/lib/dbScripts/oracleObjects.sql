CREATE OR REPLACE FUNCTION F_GET100IDS RETURN NUMBER
IS
  FID NUMBER;
BEGIN
  SELECT SEQ_UBMAIN.NEXTVAL INTO FID FROM dual;
  RETURN(FID);
END;
/
--
CREATE OR REPLACE FUNCTION F_GET1ID RETURN NUMBER
IS
  FID NUMBER;
BEGIN
  SELECT SEQ_UBMAIN_BY1.NEXTVAL INTO FID FROM dual;
  RETURN(FID);
END;
/
--
CREATE OR REPLACE FUNCTION F_TIMELOG(ADate IN DATE, AWithMilliSec IN INTEGER := NULL) RETURN NUMBER 
IS
  FRes NUMBER(20);
  FDivider INTEGER;
BEGIN
  IF (AWithMilliSec IS NULL) OR (AWithMilliSec = 1) THEN
    FDivider := (24 * 60 * 60 * 1000);
  ELSE
    FDivider := (24 * 60 * 60);
  END IF; 

  SELECT TO_NUMBER(ADate - TO_DATE('01.01.1970 06:00:00','DD.MM.YYYY HH24:MI:SS')) * FDivider INTO FRes FROM dual;
  RETURN(FRes);
END;
/
--
CREATE OR REPLACE FUNCTION F_TIMELOGTODATE(AValue IN NUMBER, AWithMilliSec IN INTEGER := NULL) RETURN DATE 
IS
  FRes DATE;
  FDivider INTEGER;
BEGIN
  IF (AWithMilliSec IS NULL) OR (AWithMilliSec = 1) THEN
    FDivider := 86400000;
  ELSE
    FDivider := 86400;
  END IF; 

  SELECT TO_DATE('01.01.1970 06:00:00','DD.MM.YYYY HH24:MI:SS') + AValue / FDivider INTO FRes FROM dual;
  RETURN(FRes);
END;
/
--
CREATE OR REPLACE FUNCTION F_MAXDATE RETURN DATE
IS
  FRES DATE;
BEGIN
  FRES := TO_DATE('31.12.9999', 'dd.mm.yyyy');
  RETURN(FRES);
END;
/
--