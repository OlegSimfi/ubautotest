input { 	file {	path => "/mnt/ublog/ub_log/**/*.log"	delimiter => ""	start_position => "beginning"	sincedb_path => "//usr/share/logstash/sincedb/.sincedb"	}}filter {	grok {	match => { "message" => "(?<year>[0-9]{4})(?<month>[0-9]{2})(?<day>[0-9]{2})\s(?<hour>[0-9]{2})(?<min>[0-9]{2})(?<sec>[0-9]{2})(?<ssec>[0-9]{2}).+TubUserSession\(.+\)\sNew\ssession\s(?<login>[a-z0-9_]*)/.+%{IPV4:ip}.*$" }	}	if "_grokparsefailure" in [tags]{		drop {}	}	mutate {	add_field => {	"timestamp" => "%{year}-%{month}-%{day} %{hour}:%{min}:%{sec}:%{ssec}"		}	}	date {	match => [ "timestamp" , "yyyy-MM-dd HH:mm:ss:SS" ]	timezone => "Europe/Kiev"	}	mutate { 	remove_field => [ "message", "timestamp", "year", "month", "day", "hour", "min", "sec", "ssec" ]	}	geoip {	source => "ip"	database => "/usr/share/logstash/GeoLite2-City.mmdb"	add_field => [ "[geoip][coordinates]", "%{[geoip][longitude]}" ]	add_field => [ "[geoip][coordinates]", "%{[geoip][latitude]}"  ]	add_field => [ "location", "%{[geoip][location]}" ]	add_field => [ "raw_ip", "ip" ]	}	mutate { 	convert => [ "[geoip][coordinates]", "float"]	}}output {	elasticsearch {	user => "logstash_internal"	password => "wasd01385"	}	stdout { codec => rubydebug }}